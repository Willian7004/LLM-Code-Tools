》》写一个python程序，实现以下功能：
1.在命令行输入内容。如果输入的内容为空，用utf-8编码读取当前目录的question.txt文件的内容作为输入，把输入的内容保存到“text”字符串。如果输入的内容为和question.txt的内容均为空，输出“输入内容为空”并结束程序
2.导入“api”包，把“text”字符串的内容输入到api.code()函数
3.在api. code()函数返回的字符串中匹配从“```”到下一个“```”之间的字符再去掉匹配到的字符的第一行，用utf-8编码把这部分字符保存到“code”字符串并写入当前目录中的code. py（如果当前目录没有code. py则创建code. py，如果当前目录已有code. py则覆盖code. py中的内容）
4.运行当前目录中的code. py，如果code. py正常运行，把code. py输出的内容保存到“result”字符串并把上述三个字符串传入api. code_check()函数（传入顺序为api. code_check(text, code, result)）。如果code. py报错，把报错内容保存到“result”字符串并把“code”字符串和“result”字符串传入api. code_error()函数（传入顺序为api. code_error(code, result)）。
5.在第4步运行的函数的返回的内容中匹配从“```”到下一个“```”之间的字符再去掉匹配到的字符的第一行，用utf-8编码把这部分字符保存到“code”字符串并写入当前目录中的code. py（如果当前目录没有code. py则创建code. py，如果当前目录已有code. py则覆盖code. py中的内容）。如果没有匹配到内容，则输出第4步运行的函数的返回的内容并结束程序。
6.重复执行第4步和第5步，如果执行次数达到5次且最后一次运行code.py没有报错，则输出“不确定程序是否符合预期”并结束程序；如果执行次数达到5次且最后一次运行code.py报错，则输出“程序不能正常运行”并结束程序

》
```python
import os
import subprocess
import re

def read_input():
    user_input = input("请输入内容: ")
    if not user_input:
        try:
            with open("question.txt", "r", encoding="utf-8") as file:
                user_input = file.read().strip()
        except FileNotFoundError:
            user_input = ""
    return user_input

def extract_code(response):
    match = re.search(r"```(.*?)```", response, re.DOTALL)
    if match:
        code_lines = match.group(1).strip().split('\n')[1:]
        return '\n'.join(code_lines)
    return None

def run_code(code_path):
    try:
        result = subprocess.check_output(["python", code_path], universal_newlines=True)
    except subprocess.CalledProcessError as e:
        result = str(e)
    return result

def save_code(code):
    with open("code.py", "w", encoding="utf-8") as file:
        file.write(code)

def main():
    text = read_input()
    if not text:
        print("输入内容为空")
        return

    import api
    response = api.code(text)
    code = extract_code(response)
    if not code:
        print("未匹配到代码内容")
        return

    save_code(code)
    result = run_code("code.py")

    for i in range(5):
        if "Error" in result:
            response = api.code_error(code, result)
        else:
            response = api.code_check(text, code, result)

        new_code = extract_code(response)
        if not new_code:
            print(response)
            return

        save_code(new_code)
        result = run_code("code.py")

    if "Error" in result:
        print("程序不能正常运行")
    else:
        print("不确定程序是否符合预期")

if __name__ == "__main__":
    main()
```

这个程序实现了你所描述的功能。请确保在运行此程序之前，`api` 包已经正确安装，并且包中包含 `code`、`code_check` 和 `code_error` 函数。